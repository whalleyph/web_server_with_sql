{
	"info": {
		"_postman_id": "cb26299b-5eae-4652-ad3e-0aeced0eac51",
		"name": "album API validation demo with joi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7505193"
	},
	"item": [
		{
			"name": "post simple album should be fine",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"artist\": \"Led Zeppelin\",\n    \"title\": \"Led Zeppelin II\",\n    \"year\": 1969\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:4000/album",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"album"
					]
				}
			},
			"response": []
		},
		{
			"name": "post album with extra fields should fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"The response JSON should contain complaint about the cheeky extra field\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.error).to.exist.and.to.be.an('object');    ",
							"    pm.expect(responseData.error.details).to.exist.and.to.be.an('array');",
							"    ",
							"    const firstErrorDetail = responseData.error.details[0];",
							"    pm.expect(firstErrorDetail).to.be.an('object');",
							"    pm.expect(firstErrorDetail.message).to.equal(`\"cheekyExtraField\" is not allowed`);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"artist\": \"Led Zeppelin\",\n    \"title\": \"Led Zeppelin II\",\n    \"cheekyExtraField\": \"can this sneak past?\",\n    \"year\": 1969\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:4000/album",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"album"
					]
				}
			},
			"response": []
		},
		{
			"name": "post album with no body at all should fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"The response JSON should contain complaint that artist is missing\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.error).to.exist.and.to.be.an('object');    ",
							"    pm.expect(responseData.error.details).to.exist.and.to.be.an('array');",
							"    ",
							"    const firstErrorDetail = responseData.error.details[0];",
							"    pm.expect(firstErrorDetail).to.be.an('object');",
							"    pm.expect(firstErrorDetail.message).to.equal(`\"artist\" is required`);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:4000/album",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"album"
					]
				}
			},
			"response": []
		},
		{
			"name": "post album with non-string field should fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.equal(400);",
							"});",
							"",
							"",
							"",
							"pm.test(\"The response JSON should contain validation complaint\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.error).to.exist.and.to.be.an('object');    ",
							"    pm.expect(responseData.error.details).to.exist.and.to.be.an('array');",
							"    ",
							"    const firstErrorDetail = responseData.error.details[0];",
							"    pm.expect(firstErrorDetail).to.be.an('object');",
							"    pm.expect(firstErrorDetail.message).to.exist.and.to.be.a('string');",
							"    ",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"artist\": {\"firstName\": \"Stevie\", \"secondName\": \"Wonder\"},\n    \"title\": \"Songs In The Key Of Life\",\n    \"year\": 1976\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:4000/album",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"album"
					]
				}
			},
			"response": []
		}
	]
}